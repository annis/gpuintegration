add_executable(oneapi_accuracy_improves_with_epsrel accuracy_improves_with_epsrel.cpp)
#target_link_libraries(oneapi_accuracy_improves_with_epsrel PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_accuracy_improves_with_epsrel PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_accuracy_improves_with_epsrel PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_accuracy_improves_with_epsrel PRIVATE "-lonemkl")
#target_compile_options(oneapi_accuracy_improves_with_epsrel PRIVATE "-fsycl" "-fsycl-targets=nvptx64-nvidia-cuda" "-lonemkl"  "-mllvm" "-inline-threshold=10000")
add_test(oneapi_accuracy_improves_with_epsrel oneapi_accuracy_improves_with_epsrel)

add_executable(oneapi_Easy_Integrals Easy_Integrals.cpp)
#target_link_libraries(Interpolation1D PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_Easy_Integrals PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_Easy_Integrals PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_Easy_Integrals PRIVATE "-lonemkl")
#target_compile_options(oneapi_Easy_Integrals PRIVATE "-fsycl" "-fsycl-targets=nvptx64-nvidia-cuda" "-lonemkl"  "-mllvm" "-inline-threshold=10000")
add_test(oneapi_Easy_Integrals oneapi_Easy_Integrals)

add_executable(oneapi_uniform_functions uniform_functions.cpp)
#target_link_libraries(uniform_functions PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_uniform_functions PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_uniform_functions PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_uniform_functions PRIVATE "-lonemkl")
add_test(oneapi_uniform_functions oneapi_uniform_functions)

add_executable(oneapi_Uniform_sub_division Uniform_sub_division.cpp)
#target_link_libraries(Uniform_sub_division PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_Uniform_sub_division PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_Uniform_sub_division PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_Uniform_sub_division PRIVATE "-lonemkl")
add_test(oneapi_Uniform_sub_division oneapi_Uniform_sub_division)

add_executable(oneapi_RegionSampling RegionSampling.dp.cpp)
#target_link_libraries(RegionSampling PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_RegionSampling PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_RegionSampling PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_RegionSampling PRIVATE "-lonemkl")
add_test(oneapi_RegionSampling oneapi_RegionSampling)

add_executable(oneapi_BoxIntegrals BoxIntegrals.dp.cpp)
target_include_directories(oneapi_BoxIntegrals PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_BoxIntegrals PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_BoxIntegrals PRIVATE "-lonemkl" )
add_test(oneapi_BoxIntegrals oneapi_BoxIntegrals)

add_executable(oneapi_NaNIntegral NanIntegral.dp.cpp)
target_include_directories(oneapi_NaNIntegral PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_NaNIntegral PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_NaNIntegral PRIVATE "-lonemkl" )
add_test(oneapi_NaNIntegral oneapi_NaNIntegral)

add_executable(oneapi_pagani_region_filtering RegionFiltering.cpp)
target_include_directories(oneapi_pagani_region_filtering PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_pagani_region_filtering PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_pagani_region_filtering PRIVATE "-lonemkl" )
add_test(oneapi_pagani_region_filtering oneapi_pagani_region_filtering)