add_executable(oneapi_test_volume test_volume.cpp)
#target_link_libraries(oneapi_test_volume PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_test_volume PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_test_volume PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_test_volume PRIVATE "-lonemkl")
#target_compile_options(oneapi_test_volume PRIVATE "-fsycl" "-fsycl-targets=nvptx64-nvidia-cuda" "-lonemkl"  "-mllvm" "-inline-threshold=10000")
add_test(oneapi_test_volume oneapi_test_volume)

add_executable(oneapi_Interpolation1D Interpolation1D.dp.cpp)
#target_link_libraries(Interpolation1D PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_Interpolation1D PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_Interpolation1D PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_Interpolation1D PRIVATE "-lonemkl")
add_test(oneapi_Interpolation1D oneapi_Interpolation1D)

add_executable(oneapi_Interpolation2D Interpolation2D.dp.cpp)
#target_link_libraries(Interpolation2D PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_Interpolation2D PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_Interpolation2D PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_Interpolation2D PRIVATE "-lonemkl")
add_test(oneapi_Interpolation2D oneapi_Interpolation2D)

add_executable(oneapi_Reduction Reduction.cpp)
#target_link_libraries(Reduction PRIVATE MKL::MKL_DPCPP)
target_include_directories(oneapi_Reduction PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_Reduction PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_Reduction PRIVATE "-lonemkl" "-ltbb")
add_test(oneapi_Reduction oneapi_Reduction)

add_executable(oneapi_prefix_sum prefix_sum.cpp)
target_include_directories(oneapi_prefix_sum PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_prefix_sum PUBLIC "${ONEMKL_DIR}/lib/")
#target_link_libraries(prefix_sum PRIVATE MKL::MKL_DPCPP)
target_compile_options(oneapi_prefix_sum PRIVATE "-lonemkl")
add_test(oneapi_prefix_sum oneapi_prefix_sum)

add_executable(oneapi_min_max min_max.cpp)
target_include_directories(oneapi_min_max PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_min_max PUBLIC "${ONEMKL_DIR}/lib/")
#target_link_libraries(min_max PRIVATE MKL::MKL_DPCPP)
target_compile_options(oneapi_min_max PRIVATE "-lonemkl")
add_test(oneapi_min_max oneapi_min_max)

add_executable(oneapi_StatefulIntegrand StatefulIntegrand.dp.cpp)
target_include_directories(oneapi_StatefulIntegrand PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_StatefulIntegrand PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_StatefulIntegrand PRIVATE "-lonemkl" )
add_test(oneapi_StatefulIntegrand oneapi_StatefulIntegrand)

add_executable(oneapi_cudaDynamicArray cudaDynamicArray.dp.cpp)
target_include_directories(oneapi_cudaDynamicArray PRIVATE "${ONEMKL_DIR}/include")
target_link_directories(oneapi_cudaDynamicArray PUBLIC "${ONEMKL_DIR}/lib/")
target_compile_options(oneapi_cudaDynamicArray PRIVATE "-lonemkl" )
add_test(oneapi_cudaDynamicArray oneapi_cudaDynamicArray)